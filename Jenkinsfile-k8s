pipeline {
    agent any

    environment {
        AWS_CREDENTIALS = 'aws-credentials' 
        AWS_DEFAULT_REGION = 'eu-central-1'
        CLUSTER_NAME = 'dev-opika-eu-central-1' // EKS cluster name
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Configure AWS Credentials') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: AWS_CREDENTIALS]]) {
                        // Configure AWS CLI
                        sh 'aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID'
                        sh 'aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY'
                        sh 'aws configure set region $AWS_DEFAULT_REGION'
                    }
                }
            }
        }

        stage('Update kubeconfig') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: AWS_CREDENTIALS]]) {
                        // Update kubeconfig for EKS cluster
                        sh "aws eks --region ${AWS_DEFAULT_REGION} update-kubeconfig --name ${CLUSTER_NAME}"
                    }
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                script {
                    // Directory containing the manifest files
                    def manifestPath = 'manifests'
                    // Loop over each YAML file in the manifests directory
                    dir(manifestPath) {
                        sh '''
                        for file in *.yaml; do
                            echo "Applying $file..."
                            kubectl apply -f $file
                        done
                        '''
                    }
                }
            }
        }

    }

    post {
        success {
            echo 'Deployment to EKS completed successfully!'
        }
        failure {
            echo 'Deployment to EKS failed!'
        }
    }
}
