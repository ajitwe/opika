apiVersion: apps/v1
kind: Deployment
metadata:
  name: opika-deployment
  labels:
    app: opika
spec:
  # replicas: 1
  selector:
    matchLabels:
      app: opika
  template:
    metadata:
      labels:
        app: opika
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: scrapy
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: opika
        image: docker.io/ajitsingh25/opika:latest # Specify the appropriate tag if needed
        ports:
        - containerPort: 5000  # Change this if your app uses a different port
        resources:
          requests:
            cpu: "200m"  # Request 200 milliCPU
            memory: "256Mi"  # Request 256 MiB of memory
          limits:
            cpu: "500m"  # Limit to 500 milliCPU
            memory: "512Mi"  # Limit to 512 MiB of memory
        # Add readiness and liveness probes
        readinessProbe:
          httpGet:
            path: /health         # The health check path
            port: 5000            # The port your application listens on
          initialDelaySeconds: 5  # Delay before starting health checks
          periodSeconds: 10       # Frequency of health checks
          failureThreshold: 3     # Number of failed checks before marking as unavailable
          
        livenessProbe:
          httpGet:
            path: /health         # The health check path
            port: 5000            # The port your application listens on
          initialDelaySeconds: 15 # Delay before starting liveness checks
          periodSeconds: 20       # Frequency of liveness checks
          failureThreshold: 3     # Number of failed checks before restarting the container
